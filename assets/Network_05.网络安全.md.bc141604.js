import{_ as t,o as a,c as e,U as l}from"./chunks/framework.a7041386.js";const i="/my-blog/assets/image-20230314171338272.c2160444.png",r="/my-blog/assets/image-20230314172659326.6459314e.png",o="/my-blog/assets/image-20230314172753299.7df9330e.png",d="/my-blog/assets/image-20230314173359395.2bdd9bcb.png",f=JSON.parse('{"title":"网络安全","description":"","frontmatter":{"tag":["计算机网络"]},"headers":[],"relativePath":"Network/05.网络安全.md","filePath":"Network/05.网络安全.md","lastUpdated":1689602218000}'),s={name:"Network/05.网络安全.md"},n=l('<h1 id="网络安全" tabindex="-1">网络安全 <a class="header-anchor" href="#网络安全" aria-label="Permalink to &quot;网络安全&quot;">​</a></h1><h2 id="网络安全概述" tabindex="-1">网络安全概述 <a class="header-anchor" href="#网络安全概述" aria-label="Permalink to &quot;网络安全概述&quot;">​</a></h2><p>网络安全分为安全威胁，安全服务和安全机制三方面</p><h3 id="安全威胁" tabindex="-1">安全威胁 <a class="header-anchor" href="#安全威胁" aria-label="Permalink to &quot;安全威胁&quot;">​</a></h3><p>分为被动攻击和主动攻击</p><ul><li><p>被动攻击：攻击者通过窃听手段仅观察和分析网络中传输数据流中的敏感信息， 而不对其进行干扰。</p></li><li><p>主动攻击：攻击者对网络中传输着的数据流进行各种处理。</p><ul><li>中断</li><li>篡改</li><li>伪造</li><li>恶意程序 <ul><li>计算机病毒 计算机蠕虫 特洛伊木马 逻辑炸弹 后门入侵 流氓软件</li></ul></li><li>拒绝服务攻击（Dos） <ul><li><img src="'+i+'" alt="image-20230314171338272"></li></ul></li></ul></li></ul><p>对于被动攻击：由于其不涉及对数据的更改，很难被发现，因此对付被动攻击主要采用各种数据加密技术进行预防，而不是主动检测。</p><p>对于主动攻击：由于主动攻击<strong>容易检测</strong>。对付主动攻击除要采取<strong>数据加密技术</strong>、访问控 制技术等<strong>预防措施</strong>，还需要采取<strong>各种检测技术</strong>及时发现井阻止攻击，同时还要对攻击源进行 追踪，井利用<strong>法律手段</strong>对其进行打击。</p><h3 id="安全服务" tabindex="-1">安全服务 <a class="header-anchor" href="#安全服务" aria-label="Permalink to &quot;安全服务&quot;">​</a></h3><table><thead><tr><th>安全服务</th><th>作用</th><th>对付攻击</th></tr></thead><tbody><tr><td>保密性</td><td>确保网络中传输的信息只有其发送方和接收方才能懂得其含义</td><td>对付被动攻击</td></tr><tr><td>报文完整性</td><td>确保网络中传输的信息不被攻击者篡改或伪造</td><td>对付主动攻击</td></tr><tr><td>实体鉴别</td><td>通信两端的实体能够相互验证对方的真实身份</td><td>对付主动攻击</td></tr><tr><td>不可否认性</td><td>防止发送方或接收方否认发送或接收过某信息</td><td>保护电子商务</td></tr><tr><td>访问控制</td><td>对实体的访问权限进行控制</td><td>防止未授权实体访问</td></tr><tr><td>可用性</td><td>确保授权用户能够正常访问系统信息和资源</td><td>拒绝服务攻击</td></tr></tbody></table><h2 id="对称加密与非对称加密" tabindex="-1">对称加密与非对称加密 <a class="header-anchor" href="#对称加密与非对称加密" aria-label="Permalink to &quot;对称加密与非对称加密&quot;">​</a></h2><h3 id="密码学基本概念" tabindex="-1">密码学基本概念 <a class="header-anchor" href="#密码学基本概念" aria-label="Permalink to &quot;密码学基本概念&quot;">​</a></h3><p>将发送的数据变换成对任何不知道如何做逆变换的人都不可理解的形式，从而保证数据的机密性，这种变换称为加密 (Encryption)</p><ul><li>加密前的数据被称为明文 (Plaintext)</li><li>加密后的数据被称为密文 (Ciphertext)</li></ul><p>通过某种逆变换将密文重新变换回明文，这种逆变换称为解密(Decryption)</p><p>加密和解密过程可以使用密钥（Key）作为参数。</p><ul><li>密钥必须保密，但加密和解密的过程可以公开。</li><li>只有知道密钥的人才能解密密文，否则即使知道加密或解密算法也无法解密密文。</li></ul><blockquote><p>为什么依靠密钥进行保密而不依靠密码算法进行保密呢？</p></blockquote><ul><li>一旦算法失密就必须放弃该算法，这意味着需 要频繁地修改密码算法，而开发一个新的密码 算法是非常困难的事情。</li><li>密钥空间可以很大，用密钥将密码算法参数化， 同一个密码算法可以为大量用户提供加密服务。</li></ul><p><img src="'+r+'" alt="image-20230314172659326"></p><p><img src="'+o+'" alt="image-20230314172753299"></p><h3 id="对称密钥密码体制" tabindex="-1">对称密钥密码体制 <a class="header-anchor" href="#对称密钥密码体制" aria-label="Permalink to &quot;对称密钥密码体制&quot;">​</a></h3><p>对称密钥密码体制是指加密密钥与解密密钥相同的密码体制。 数据加密的一般模型使用对称密钥</p><p><img src="'+d+'" alt="image-20230314173359395"></p><p>数据加密标准的发展：</p><blockquote><p>DES-&gt;三重DES-&gt;高级加密标准ANS</p></blockquote><p><strong>高级加密标准AES</strong></p><ul><li>高级加密标准(Advanced Encryption Standard， AES)支持128比特、192比特和256比比特的密钥长度，用硬件和软件都可以快速实现。</li><li>AES不需要太多内存，因此适用于小型移动设备。</li><li>据美国国家标准与技术研究院NIST估计，如果用1秒即可破解56比特密钥长度的DES的计算机，来破解128比特密钥长度的AES密钥，要用大约149万亿年的时间才有可能完成破解。</li></ul><h3 id="公钥密码体制" tabindex="-1">公钥密码体制 <a class="header-anchor" href="#公钥密码体制" aria-label="Permalink to &quot;公钥密码体制&quot;">​</a></h3>',29),p=[n];function h(c,u,_,m,g,b){return a(),e("div",null,p)}const k=t(s,[["render",h]]);export{f as __pageData,k as default};
