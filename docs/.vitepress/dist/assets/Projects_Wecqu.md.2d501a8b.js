import{_ as a,o as e,c as l,U as i}from"./chunks/framework.a7041386.js";const t="/my-blog/assets/image-20230225154558704.2e8227f4.png",o="/my-blog/assets/image-20230225154639099.a49fc88a.png",s="/my-blog/assets/image-20230225220453325.e988bd70.png",r="/my-blog/assets/image-20230225220529292.1e207bf5.png",c="/my-blog/assets/image-20230225220730213.0d68ac42.png",n="/my-blog/assets/image-20230225220807931.39e07f82.png",m="/my-blog/assets/image-20230225220836320.af391faa.png",h="/my-blog/assets/image-20230225220901184.3946efe4.png",y=JSON.parse('{"title":"WeCQU微信小程序","description":"","frontmatter":{"tag":["Project"]},"headers":[],"relativePath":"Projects/Wecqu.md","filePath":"Projects/Wecqu.md","lastUpdated":1689602218000}'),p={name:"Projects/Wecqu.md"},u=i('<h1 id="wecqu微信小程序" tabindex="-1">WeCQU微信小程序 <a class="header-anchor" href="#wecqu微信小程序" aria-label="Permalink to &quot;WeCQU微信小程序&quot;">​</a></h1><blockquote><p>Uniapp + GraceUI 5 用户画像：在校大学生</p></blockquote><h2 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h2><p>我们的项目是一个智慧校园一体化查询微信小程序，专为大学生打造，旨在提高学生在校内的信息查询效率。</p><p>具体的实现方式是利用”微信小程序+后端“的技术，实现了一次登录，多次查询的功能，无需每次都输入账号和密码，也无需繁琐的点击操作，只需简单地访问想要查询的页面，就能快速得到结果。</p><h2 id="项目数据" tabindex="-1">项目数据 <a class="header-anchor" href="#项目数据" aria-label="Permalink to &quot;项目数据&quot;">​</a></h2><blockquote><p>单日累计打开次数约10万+，单日访问人数1万+</p></blockquote><p><img src="'+t+'" alt="image-20230225154558704"></p><p><img src="'+o+'" alt="image-20230225154639099"></p><h2 id="页面展示" tabindex="-1">页面展示 <a class="header-anchor" href="#页面展示" aria-label="Permalink to &quot;页面展示&quot;">​</a></h2><blockquote><p>这里仅展示一些用户使用频率较高的页面</p></blockquote><h3 id="_1-首页" tabindex="-1">1.首页 <a class="header-anchor" href="#_1-首页" aria-label="Permalink to &quot;1.首页&quot;">​</a></h3><img src="'+s+'" alt="image-20230225220453325" style="zoom:50%;"><h3 id="_2-课表" tabindex="-1">2.课表 <a class="header-anchor" href="#_2-课表" aria-label="Permalink to &quot;2.课表&quot;">​</a></h3><img src="'+r+'" alt="image-20230225220529292" style="zoom:50%;"><h3 id="_3-账户中心" tabindex="-1">3.账户中心 <a class="header-anchor" href="#_3-账户中心" aria-label="Permalink to &quot;3.账户中心&quot;">​</a></h3><img src="'+c+'" alt="image-20230225220730213" style="zoom:50%;"><h3 id="_4-一卡通与电费" tabindex="-1">4.一卡通与电费 <a class="header-anchor" href="#_4-一卡通与电费" aria-label="Permalink to &quot;4.一卡通与电费&quot;">​</a></h3><img src="'+n+'" alt="image-20230225220807931" style="zoom:50%;"><h3 id="_5-成绩单" tabindex="-1">5.成绩单 <a class="header-anchor" href="#_5-成绩单" aria-label="Permalink to &quot;5.成绩单&quot;">​</a></h3><img src="'+m+'" alt="image-20230225220836320" style="zoom:50%;"><h3 id="_6-常用电话" tabindex="-1">6.常用电话 <a class="header-anchor" href="#_6-常用电话" aria-label="Permalink to &quot;6.常用电话&quot;">​</a></h3><img src="'+h+'" alt="image-20230225220901184" style="zoom:50%;"><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><ul><li>课表查询🔥</li><li>成绩查询🔥</li><li>校园卡余额与消费记录查询🔥</li><li>考试安排查询</li><li>志愿时长查询</li><li>空教室查询</li><li>校车时刻查询</li><li>历届课程信息查询</li><li>常用电话查询</li></ul><h2 id="我的工作⛱" tabindex="-1">我的工作⛱ <a class="header-anchor" href="#我的工作⛱" aria-label="Permalink to &quot;我的工作⛱&quot;">​</a></h2><blockquote><p>持续时间：2022.9 - 至今</p></blockquote><ul><li><p>页面</p><ul><li>使用GraceUI组件库, 进行页面UI的重构, 重构率约<strong>40%</strong></li><li>对组件库中的轮播图组件进行二次封装，实现点击跳转webview页面的功能</li></ul></li><li><p>逻辑</p><ul><li><p>优化原有的javascript逻辑, 进行部分页面逻辑的重写, 重写率约<strong>50%</strong></p></li><li><p>封装部分工具类函数, 例如:</p><ul><li>使用promise封装wx.request, 避免回调地狱的产生</li><li>使用promise封装wx.showModal请求, 简化模态对话框的使用方式</li><li>封装将临时图片转换为base64图片的函数, 获取用户头像时调用</li></ul></li><li><p>通过变量加锁的方式防止用户多次发起登录请求, 减轻服务器压力</p></li><li><p>通过setStorage和getStorage方式实现数据持久化，包括base64用户头像的存取，课表数据的存取等</p></li></ul></li></ul><h2 id="前端特色" tabindex="-1">前端特色 <a class="header-anchor" href="#前端特色" aria-label="Permalink to &quot;前端特色&quot;">​</a></h2><ul><li><p>充分利用微信小程序提供的 API</p><ul><li>微信小程序本身目录结构非常的清晰，分为四种主要的文件类型 .wxml/.wxss/.js/.json</li><li>第一类文件主要是类似于 html 的页面结构</li><li>第二类文件是类似于 CSS 的样式文件</li><li>第三类文件是传统的 js 文件，但是在这个 js 文件中会 实例化一个 Page 对象作为入口函数，</li><li>第四类文件是配置文件</li><li>此外，微信小程序提供很多已经包装好的函数，例如 Loading加载动画，request 请求等等。</li></ul></li><li><p>Promise 无阻塞请求</p><ul><li>由于一个页面中存在类似于课表信息，一卡通信息等许多类型的数据需要请求</li><li>如果同时使用串行函数请求，会有阻塞发生</li><li>为了避免这种情况， 我们引入了 es6 中的 Promise 函数，将每一个请求包装成一个 Promise 对象，然后并行无阻塞请求，这样就不会发生，一个请求等另一个请求这种影响性能的情况。</li></ul></li><li><p>针对通用函数采用了工具包的形式， 工具包使用的是模块化接口设计对外提供访问函数, 将通用逻辑统一封装到utils工具文件夹下, 页面逻辑中直接导入使用即可</p></li><li><p>采用前后端完全分离的模式, 后端只需要向前端提供接口即可</p></li></ul>',30),d=[u];function _(g,b,q,f,P,k){return e(),l("div",null,d)}const j=a(p,[["render",_]]);export{y as __pageData,j as default};
