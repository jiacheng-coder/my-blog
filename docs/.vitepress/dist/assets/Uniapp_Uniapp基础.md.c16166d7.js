import{_ as e,o,c as a,U as l}from"./chunks/framework.876add27.js";const _=JSON.parse('{"title":"uniapp基础","description":"","frontmatter":{"tag":["Uniapp"]},"headers":[],"relativePath":"Uniapp/Uniapp基础.md","filePath":"Uniapp/Uniapp基础.md","lastUpdated":1689602218000}'),i={name:"Uniapp/Uniapp基础.md"},n=l(`<h1 id="uniapp基础" tabindex="-1">uniapp基础 <a class="header-anchor" href="#uniapp基础" aria-label="Permalink to &quot;uniapp基础&quot;">​</a></h1><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><h2 id="应用生命周期" tabindex="-1">应用生命周期 <a class="header-anchor" href="#应用生命周期" aria-label="Permalink to &quot;应用生命周期&quot;">​</a></h2><p>在<code>App.vue</code>文件中使用, 主要包括onLaunch, onShow和onHide</p><ul><li><code>onLaunch</code> - 初始化完成时出发, 全局仅一次</li><li><code>onShow </code> - 启动时 / 从后台进入前台</li><li><code>onHide</code>- 从前台进入后台</li><li><code>onError</code> - 报错时触发</li><li><code>onUniNViewMessage</code> - 对nvue页面发送的数据进行监听</li></ul><h3 id="页面生命周期" tabindex="-1">页面生命周期 <a class="header-anchor" href="#页面生命周期" aria-label="Permalink to &quot;页面生命周期&quot;">​</a></h3><p>在<code>pages</code>目录中使用, 主要包括onLaunch, onShow和onHide, 以及onReady</p><ul><li><code>onLoad</code> - 监听页面加载, 参数为上个页面传递的参数</li><li><code>onShow</code> - 页面显示, 页面每次出现在屏幕上都触发, 包括从下级页面返回当前页面</li><li><code>onHide</code> - 页面隐藏</li><li><code>onReady</code> - 页面初次渲染完成, 注意如果渲染速度快, 会在页面进入动画完成前触发</li><li><code>onUnload</code> - 页面卸载</li><li><code>onPullDownRefresh</code> - 下拉刷新</li></ul><blockquote><p>针对特定端, 还有额外生命周期</p></blockquote><ul><li>百度小程序 <ul><li><code>onInit</code> - 监听页面初始化, 参数同onLoad参数, 为上个页面传递的数据</li></ul></li><li><code>App, 微信小程序, 快手小程序</code><ul><li><code>onResize</code> - 监听窗口尺寸变化</li></ul></li></ul><h3 id="组件生命周期" tabindex="-1">组件生命周期 <a class="header-anchor" href="#组件生命周期" aria-label="Permalink to &quot;组件生命周期&quot;">​</a></h3><p>在<code>components</code>目录中使用, 主要包括created, mounted</p><ul><li>beforeCreated</li><li>created</li><li>beforeMounted</li><li>mounted</li><li>beforeUpdate - 仅H5平台</li><li>updated - 仅H5平台</li></ul><h2 id="rpx和scoped" tabindex="-1">rpx和scoped <a class="header-anchor" href="#rpx和scoped" aria-label="Permalink to &quot;rpx和scoped&quot;">​</a></h2><p>rpx</p><ul><li>可以在pages.json下新增rpxCalcBaseDeviceWidth和rpxCalcMaxDeviceWidth字段来控制页面宽度计算方式</li><li>仅支持H5和App端</li></ul><p>scoped</p><ul><li>uniapp通过条件编译的方式, 自动为H5端增加<code>scoped</code>, 解决样式冲突问题</li><li>小程序端由于其天然的多页面属性, 不需要此设置, 会在编译时跳过</li></ul><h2 id="条件编译" tabindex="-1">条件编译 <a class="header-anchor" href="#条件编译" aria-label="Permalink to &quot;条件编译&quot;">​</a></h2><p>通过特定的语法, 以及指定的平台名称, 可以在<strong>js, css, ts, html,</strong> 甚至是<strong>static目录</strong>中实现条件编译, 十分方便</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* #ifdef APP-PLUS-NVUE */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">gui-icons</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> graceIconfont</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* #endif */</span></span></code></pre></div><p>同样, 也可以实现整体目录条件编译:</p><p>在根目录下创建<code>platforms</code>目录, 然后进一步创建<code>app-plus</code>,<code>mp-wexin</code>等子目录, 用来存放不同平台的文件</p><h2 id="css变量" tabindex="-1">css变量 <a class="header-anchor" href="#css变量" aria-label="Permalink to &quot;css变量&quot;">​</a></h2><ul><li><code>--status-bar-height</code><ul><li>小程序里使用</li><li>系统状态栏高度</li><li>pages.json里设置<code>&quot;navigationStyle&quot;: &quot;custom&quot;</code>时使用</li></ul></li><li><code>--window-top</code><ul><li>H5页面使用</li><li>内容区域距离顶部的距离</li><li><code>NavigationBar</code>的高度</li></ul></li><li><code>--window-bottom</code><ul><li>H5页面使用</li><li>内容区域距离底部的距离</li><li><code>tabBar</code>的高度</li></ul></li></ul>`,25),s=[n];function c(t,p,d,r,u,h){return o(),a("div",null,s)}const m=e(i,[["render",c]]);export{_ as __pageData,m as default};
